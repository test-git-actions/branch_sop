name: 'Deploy to Live Channel - Reference Implementation'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
    - "lib/**"
    - "web/**"

permissions:
  actions: read
  contents: write
  id-token: write
  packages: write
  pull-requests: write
  security-events: write 

env:
  jf_url: https://mgmresorts.jfrog.io/artifactory/api/pub/dge-pub
  jf_disable_job_summary: false
  oidc_provider_name: "test-exploration-oidc"
  build_name: "flutter-webapp"

jobs:
  deploy_live_website:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Base
        uses: actions/checkout@v4

      - name: Parse Repo URL
        shell: bash
        run: |
            echo "JFROG_BASE_URL=https://`echo ${{ env.jf_url }} | awk -F/ '{print $3}'`" >> $GITHUB_ENV

      - name: Setup JFrog CLI
        id: setup-cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
            JF_URL: ${{ env.JFROG_BASE_URL }}
            JFROG_CLI_RELEASES_REPO: ${{ env.jf_url }}
            JFROG_CLI_EXTRACTORS_REMOTE: ${{ env.jf_url }}
            JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            disable-job-summary: ${{ env.jf_disable_job_summary }}
            oidc-provider-name: ${{ env.oidc_provider_name }}
    
      - name: Set the JFrog Token
        shell: bash
        run: echo JFROG_TOKEN=${{ steps.setup-cli.outputs.oidc-token }} >> $GITHUB_ENV

      - name: Configure fvm
        uses: kuhnroyal/flutter-fvm-config-action@v2
        id: fvm-config-action

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ steps.fvm-config-action.outputs.FLUTTER_CHANNEL }}
          flutter-version: ${{ '3.29.2' || steps.fvm-config-action.outputs.FLUTTER_VERSION }}
  
      - name: Set Pub URL
        shell: bash
        run: |
          set -e
          if test "${{ env.jf_url }}" != ""; then
            export PUB_HOSTED_URL=${{ env.jf_url }}
          fi
  
      - name: Add JFrog Token to Dart
        shell: bash
        run: |
          echo ${{ env.JFROG_TOKEN }} | dart pub token add ${{ env.jf_url }}

      - name: Install Dependencies
        run: flutter pub get
    
    #   - name: JFrog Audit
    #     continue-on-error: true
    #     run: |
    #       jf audit --watches="default-watch" --exclusions=ios;android

      - name: Verify formatting
        run: |
          dart format --set-exit-if-changed test lib

      - name: Flutter JFrog Xray Scan
        run: |-
            echo "Starting Xray scan..."
            jf scan --recursive=true --format=json --fail=true \
                lib/ test/ pubspec.yaml pubspec.lock \
                --build-name=${{ env.build_name }} \
                --build-number=${{ github.run_number }}

      - name: Build dev web app
        run: flutter build web --release --dart-define=FLAVOR=dev --output build/dev_web

      - name: Upload dev web build to JFrog
        run: |
          jf rt upload "build/dev_web/**" "dge-pub/${{ env.build_name }}/${{ github.sha }}/dev/" \
            --flat=false \
            --build-name=${{ env.build_name }} \
            --build-number=${{ github.run_number }}

      - name: Build prod web app
        run: flutter build web --release --dart-define=FLAVOR=prod --output build/prod_web

      - name: Upload prod web build to JFrog
        run: |
          jf rt upload "build/prod_web/**" "dge-pub/${{ env.build_name }}/${{ github.sha }}/prod/" \
            --flat=false \
            --build-name=${{ env.build_name }} \
            --build-number=${{ github.run_number }}

      - name: Build Collect Environment
        run: jf rt bce ${{ env.build_name }} ${{ github.run_number }}
        
      - name: Build Add VCS Info
        run: jf rt bag ${{ env.build_name }} ${{ github.run_number }}
        working-directory: ${{ github.workspace }}
        
      - name: Build Publish
        run: jf rt bp ${{ env.build_name }} ${{ github.run_number }} --detailed-summary=true
